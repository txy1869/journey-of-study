

2018 / 9 / 27



#include <stdio.h>
#include <time.h>
void menu()
{
	printf("*******************************\n");
	printf("*********1.开始游戏 ***********\n");
	printf("*********2.退出游戏 ***********\n");
	printf("*******************************\n");
}
void game()
{
	int tar = rand() % 100 + 1;
	int num = 0;
	while (1)
	{
		printf("猜一个数字:");
		scanf("%d", &num);
		if (tar == num)
		{
			printf("猜对了\n");
			break;
		}
		else if (tar < num)
		{
			printf("猜大了\n");
		}
		else
		{
			printf("猜小了\n");
		}
	}
}

int main()
{
	int input = 0;
	srand((unsigned int)time(NULL));
	do 
	{   
		menu();
		printf("请选择：");
		scanf("%d", &input);
		switch (input)
		{
		    case 1:
				game();
				break;
			case 2:
				printf("退出游戏\n");
				break;
			default:
				printf("输入错误\n");
         }
		
		} while (input);
	      return 0;
}









#include <stdio.h>
int binary_search (int arr[], int key, int left, int right);
{
	while (left <= right)
	{
		int mid = left + （right - left) / 2;
		if (arr[mid] > key)
		{
			right = mid - 1;
		}
		else if (arr[mid] < key)
		{
			left = mid + 1;
		}
		else
		{
			return mid;
		}
	}
	return -1;
}
 int main()
{   int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
    int key = 3;
    int left = 0;
	int right = sizeof(arr) / sizeof(arr[0]) - 1;
	int tar = binary_search(arr, key, left, right);
	if(tar == -1)
	{
		printf("找不到\n");
	}
	else
	{
		printf("找到了:%d\n",tar);
    }
	return 0;
}










#include <stdio.h>
#include <string.h>

int main()
{
    int i = 0;
    char password[16] = {0};
    for(i=0; i<3; i++)

	{
        printf("请输入密码:");
        scanf("%s", password);
        if(0 == strcmp( password, "123456"))

		{
                break;
		}
        else

		{
          printf("密码错误,请重新输入\n");
         }

	}

	if(i<3)
	{
		printf("登录成功\n");
	}

	else
	{
		printf("退出程序\n");
	}
          return 0;







#include <stdio.h>
#include<stdio.h>
void main()
{
	char x = 'a';
	printf("请输入：\n");
	scanf_s("%c", &x);
	if (x >= 'A' && x <= 'Z')
	{
		x = x + 32;
	}
	else
		if (x >= 'a' && x <= 'z')
		{
			x = x - 32;
		}
	printf("%c\n", x);
	system("pause");
}
